@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model Luval.GoalTracker.Entities.HabitDefinition
@{

    ViewData["Title"] = "Habit Overview";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
<link rel="stylesheet" href="~/lib/luval.goaltracker/goaltracker.css" asp-append-version="true">
}
@section Scripts{
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js" integrity="sha256-Y26AMvaIfrZ1EQU49pf6H4QzVTrOI8m9wQYKkftBt4s=" crossorigin="anonymous"></script>
<script src="~/lib/luval.goaltracker/goaltracker.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        goaltracker.initValidation();
        goaltracker.runCharts();
    });
</script>
}
<input type="hidden" data-item="@Model.Id" value="@Html.Raw(string.Join(',', new [] { Model.WeeklyProgress.ToString(), Model.MonthlyProgress.ToString(), Model.YearlyProgress.ToString() }))" />
<div class="row">
    <div class="col-sm-10">
        <h1>@Model.Name</h1>
        <p>@Model.Question</p>
    </div>
    <div class="col-sm-2">
        <button type="button" class="btn btn-secondary" onclick="location.href='/GoalTracker/Index'" >Go back</button>
    </div>
</div>
<div class="row">
    <div class="col">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col">
        <h3>Targets</h3>
        <table class="table">
            <tr>
                <td>Daily: @Model.DailyTarget?.ToString("N0")</td>
                <td>Weekly: @Model.WeeklyTarget?.ToString("N0")</td>
                <td>Monthly: @Model.MonthlyTarget?.ToString("N0")</td>
                <td>Yearly: @Model.YearlyTarget?.ToString("N0")</td>
            </tr>
        </table>
    </div>
</div>
<div class="row">
    <div class="col">
        <h3>Progress</h3>
        <div class="chart-size">
            <canvas id="chart-@Model.Id"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <h3>Last 15 day history</h3>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Entry Date</th>
                    <th>Value (@Html.Raw(Model.UnitOfMeasure))</th>
                    <th>Difficulty</th>
                </tr>
            </thead>
            @foreach (var entry in Model.Entries)
            {
                <tr>
                    <td>
                        <span>@Html.Raw(entry.EntryDateTime.ToString("MMM, dd"))</span>
                    </td>
                    <td>
                        @if(Model.Type == "Binary")
                        {
                            var val = entry.NumericValue != null && entry.NumericValue == 1 ? "Yes" : "No";
                            <span class="badge bg-primary badge-pad">@Html.Raw(val)</span>
                        }
                        else
                        {
                            <span class="badge bg-primary badge-pad">@Html.Raw(entry.NumericValue)</span>
                        }
                    </td>
                    <td>
                        <span class="badge bg-secondary badge-pad">@Html.Raw(entry.Difficulty ?? 5)</span>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
